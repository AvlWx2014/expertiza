<%= javascript_include_tag "review_time" %>
<%= javascript_include_tag "window_manager" %>
<% current_folder = DisplayOption.new %>
<% current_folder.name = "" %>
<% if origin == 'review' %>
  <% files = participant.files(participant.review_file_path(response_map_id).to_s + current_folder.name) %>
<% else %>
  <% files = participant.team.files(participant.team.path.to_s + current_folder.name) %>
<% end %>

<% session_participant = AssignmentParticipant.where(parent_id: @assignment.id, user_id: session[:user].id).first %>
<% session_participants_team = AssignmentTeam.team(session_participant) %>
<% same_team_flag = !session_participants_team.nil? and session_participants_team&.includes? participant %>
<% if params[:controller] == 'submitted_content' %>
  or
<% end %>
<br/><br/>

<% if files.length > 0 or stage != "Finished" %>
  <% if same_team_flag && stage != "Finished" %>
    <h4>&#8226; Submit a file:</h4>
    <%= form_tag({
                   :controller => 'submitted_content',
                   :action => 'submit_file',
                   :id => participant.id,
                   :origin => origin ||= nil,
                   :response_map_id => response_map_id ||= nil
                 },
                 {
                   :method => 'post',
                   :enctype => "multipart/form-data",
                   :onSubmit => "return checkIfFileExists(uploaded_file.value,1);"
                 }) do %>

      <div class="form-group">
        <input type="file" id="uploaded_file" name="uploaded_file" size=40/>
      </div>
      <%= submit_tag 'Upload file', class: 'btn btn-default' %>
      <br/><br/>
    <% end %>
  <% end %>

  <%= form_tag({
                 :controller => 'submitted_content',
                 :action => 'folder_action',
                 :id => participant.id,
                 :origin => origin ||= nil
               },
               {
                 :multipart => true,
                 id: 'folder-action-form'
               }) do %>

    <% if files.length > 0 and participant.team.directory_num != nil and participant.team.directory_num >= 0 %>
      <% if same_team_flag && stage != "Finished" %>
        <div style="padding-bottom:0.6em">
          <h5>File actions:</h5>
          <input type="button" onclick="deleteSelectedFile();" value="Delete selected file"/>
          <input type="reset" value="Reset">
        </div>
      <% end %>

      <table>
        <tr>
          <td>&nbsp;</td>
          <td>
            <div id="1_myDiv">
              <%= display_directory_tree(participant, files, !same_team_flag).html_safe %>
            </div>
          </td>
        </tr>
      </table>
    <% end %>
  <% end %>

  <!-- local_assigns is a view helper which contains information
  about local variables in this partial -->
  <% if local_assigns[:submission_check] %>
    <script type="text/javascript">
        const supported_file_type = ["pdf", "txt", "doc", "ppt", "png", "jpg"];

        $(document).ready(function () {
            let map_id = <%= @map.id %>;
            let round = <%= @current_round %>;
            let filesToUpdate = {};
            let windowManager = new WindowManager();
            const time_out_interval = 1000; // in milliseconds

            $("#1_myDiv #file_table a.fileLink").click(function (event) {
                event.preventDefault();
                let file_path = $(this).attr("href");
                let file_name = $(this).attr("download");
                let file_name_extension = file_name.split(".").pop();

                $("#restart_file_timing_flag").val("false");

                startTime2(map_id, round, file_name);

                filesToUpdate[file_name] = true;

                let window_handler = null;
                let link_timer = null;

                if (file_name_extension in supported_file_type) {
                    alert("Open file " + file_name + " in new window to view it online.");
                    windowManager.manage(
                        windowManager.newViewingWindow(map_id, round, "Test", console.log, console.log)
                    );
                    // window_handler = window.open(file_path, "_blank");
                    // windowManager.manage(window_handler)
                    // link_timer = setInterval(checkWindowStatus, time_out_interval);
                } else {
                    alert("Download file " + file_name + " to view it locally.");
                    // window_handler = window.open(file_path, "_blank");
                }

                function checkWindowStatus() {
                    let timeout_flag = $('#timeout_flag').val() == 'true';
                    if (window_handler.closed) {
                        endTime2(map_id, round, file_name);
                        filesToUpdate[file_name] = false;
                        clearInterval(link_timer);
                    }
                    timeoutAction(timeout_flag);
                }

                function timeoutAction(timeout_flag) {
                    if (timeout_flag) {
                        windowManager.closeAll();
                    }

                    if ($("#restart_file_timing_flag").val() === 'true') {
                        for (let file in filesToUpdate) {
                            if (filesToUpdate[file]) {
                                startTime2(map_id, round, file);
                            }
                        }

                        $("#restart_file_timing_flag").val('false');
                    }
                }
            })
        });
    </script>
  <% end %>
<% else %>
  <!--No files have been submitted.-->
<% end %> 